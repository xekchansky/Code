#n = 1040
#inp = '50 91 77 75 6 99 52 89 92 36 1 6 100 13 39 61 87 46 38 83 27 94 80 21 37 11 14 19 27 88 100 6 94 13 82 97 53 67 57 65 72 82 79 87 28 50 78 30 63 92 26 53 94 100 27 3 16 1 81 70 92 14 1 74 45 70 28 15 41 75 60 55 10 11 30 65 2 75 28 6 82 76 59 90 53 5 9 18 37 98 27 58 26 27 63 90 57 17 91 72 92 71 69 88 28 82 94 81 61 17 52 81 56 19 89 28 61 80 23 75 72 41 45 31 38 95 76 55 34 43 88 14 40 51 64 93 49 30 60 33 4 20 64 43 63 94 85 39 65 36 56 81 50 47 83 58 46 61 52 67 3 41 98 26 12 55 51 50 67 34 41 61 13 13 67 9 82 68 16 37 19 92 17 33 12 50 47 26 100 73 64 32 64 3 37 37 10 29 89 91 88 41 13 6 21 25 77 8 90 47 14 28 39 25 85 8 9 89 50 33 11 17 58 26 24 63 51 88 41 20 28 91 27 72 22 80 90 28 44 95 78 68 30 45 19 70 77 70 64 47 92 76 100 13 73 17 42 19 7 80 47 37 16 91 42 93 14 76 70 41 98 80 6 1 31 58 6 49 3 36 56 59 64 33 73 16 4 71 57 24 85 23 6 23 48 55 9 4 14 74 48 9 18 68 74 12 69 30 52 61 30 2 24 12 100 5 86 73 28 65 62 89 57 71 98 98 41 78 14 79 58 78 22 76 91 53 75 50 67 28 92 70 56 83 94 88 39 10 29 76 50 21 71 11 34 22 60 7 64 87 85 1 90 15 51 74 66 56 38 8 26 52 71 9 22 97 69 80 43 27 40 52 42 20 40 72 56 32 16 44 13 58 33 93 4 75 58 86 7 8 25 98 78 34 37 8 3 87 54 42 23 7 47 18 49 61 51 89 3 24 67 41 55 44 54 1 18 73 57 41 91 50 66 91 50 86 9 62 53 43 81 63 95 33 4 51 47 28 41 100 38 11 96 78 54 49 38 9 49 12 94 66 85 76 81 100 38 4 77 99 88 51 40 53 38 45 91 46 92 79 46 80 94 83 73 10 18 3 79 11 24 73 9 64 82 44 88 65 26 45 66 100 21 67 61 81 59 19 19 98 96 80 82 13 39 11 73 35 18 64 83 77 61 26 23 26 23 29 85 33 99 82 32 7 68 1 95 50 3 100 8 5 7 3 80 30 35 27 18 87 67 94 5 62 43 45 100 60 82 48 7 54 38 79 82 13 48 3 20 28 29 49 55 18 19 91 12 26 78 97 76 98 52 40 33 56 32 34 9 45 94 4 74 5 22 79 65 10 34 70 67 43 50 70 88 56 85 41 19 61 50 95 41 77 39 13 64 96 1 93 76 15 93 8 83 88 89 28 53 57 34 50 16 67 31 99 81 93 39 84 79 69 84 20 93 36 67 45 19 56 86 5 45 93 40 53 47 36 93 51 28 72 63 2 41 33 16 97 66 49 93 68 68 84 85 38 90 36 57 51 9 59 71 34 14 97 20 28 19 43 16 42 67 92 32 37 30 70 77 5 99 27 68 32 81 95 13 40 49 62 8 35 41 56 12 37 53 91 23 36 4 51 19 8 22 57 63 10 9 52 49 75 91 94 15 97 75 4 23 52 42 9 54 10 92 55 1 100 67 28 26 18 51 58 3 91 90 54 92 49 53 65 19 34 51 88 98 81 93 90 60 76 65 30 59 78 91 81 10 72 99 78 87 96 61 2 4 59 19 52 68 71 40 48 86 52 50 53 12 53 86 20 68 91 95 31 56 79 3 91 25 81 5 94 64 17 78 74 80 79 22 53 42 34 51 95 66 48 77 73 24 73 68 16 38 81 54 38 39 24 66 4 60 21 98 72 85 28 70 41 61 15 62 78 20 79 94 64 34 86 70 62 82 67 78 60 20 20 26 43 27 65 43 4 15 19 23 60 65 13 91 32 97 43 47 93 32 84 31 73 49 35 28 16 48 57 57 25 23 76 81 84 56 40 60 63 97 76 27 58 59 72 38 67 12 59 13 10 71 96 33 92 62 23 10 62 67 75 24 98 72 21 74 53 8 95 43 18 35 18 91 99 85 24 90 98 96 32 26 32 64 36 2 45 97 87 19 94 71 11 14 56 12 80 28 18 77 89 32 5 7 92 64 56 88 4 87 70 85 74 11 81 45 71 84 2 33 58 34 35 16 82 75 40 46 16 37 92 24 33 19 3 71 63 99 3 31 50 93 38 53 10 21 21 97 84 20 36 66 20 94 82 23 99 21 75 59 58 10 48 40 23 33 28 24 80 93 23 53 6'
#objects_weights = list(map(int,inp.split()))
#inp
#objects_prices = list(map(int,inp.split()))
#W = 18479    
    
n = int(input())
objects_weights = list(map(int,input().split()))
objects_prices = list(map(int,input().split()))
knapsack_max = int(input())

objects = []
knapsack = 0
total_price = 0
for i in range(len(objects_weights)):
    obj = [objects_prices[i]/objects_weights[i], objects_weights[i], objects_prices[i]]
    objects.append(obj)
objects.sort(key = lambda x: x[0], reverse = True)
for obj in objects:
    if knapsack + obj[1] <= knapsack_max:
        knapsack += obj[1]
        total_price += obj[2]
print(knapsack, total_price)
